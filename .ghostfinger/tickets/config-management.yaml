slug: config-management          # kebab-case, immutable
title: Configuration Management  # one-line human summary
description: |
  Centralize app settings in a configuration module using environment variables.
  Ensures consistent defaults, validation, and easy overrides for CLI, API, and UI.
deliverable:
  - audiomesh/config.py
  - api/settings.py
  - Updates to cli.py and api/app.py to load settings from config module
constraints:
  - Use Pydantic BaseSettings for env var parsing and validation
  - Defaults must match existing behavior
  - Missing required vars cause a clear startup error
acceptance_criteria:
  - >
    "CONFIG_GROUP=239.0.0.1 CONFIG_PORT=60000 ..." overrides discovery group and port in CLI and API
  - Invalid env var values trigger a descriptive error at startup
  - Unit tests for config parsing and defaults pass under pytest
priority: 3
estimate: 2h
dependencies:
  - fastapi-server-endpoints
status: todo
notes: ""
